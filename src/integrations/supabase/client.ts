// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://apogmqakaafdsojpbulu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFwb2dtcWFrYWFmZHNvanBidWx1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc0ODExODksImV4cCI6MjA2MzA1NzE4OX0.ICIB3O1U8lTrN_Xel6F5qak5UnydLhTXKamkpcpfcUY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create client with optimized configuration
export const supabase = createClient<Database>(
  SUPABASE_URL,
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      flowType: 'pkce',
    },
    global: {
      headers: {
        'Content-Type': 'application/json',
        'Prefer': 'return=minimal',
      },
    },
    db: {
      schema: 'public',
    },
    realtime: {
      params: {
        eventsPerSecond: 10,
      },
    },
  }
);

// Export a function to get a new client instance with custom options
export const getSupabaseClient = (options?: Parameters<typeof createClient>[2]) => {
  return createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
    ...options,
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      flowType: 'pkce',
      ...options?.auth,
    },
    global: {
      headers: {
        'Content-Type': 'application/json',
        'Prefer': 'return=minimal',
        ...options?.global?.headers,
      },
    },
    db: {
      schema: 'public',
      ...options?.db,
    },
    realtime: {
      params: {
        eventsPerSecond: 10,
        ...options?.realtime?.params,
      },
    },
  });
};
